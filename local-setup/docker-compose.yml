# docker-compose up -d
# docker-compose exec kafka bash
# kafka-console-consumer --topic test.topic --bootstrap-server kafka:9092 --from-beginning --property print.key=true --property key.separator=" : "

version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    volumes:
      - ./zookeeper/tmp/secrets:/etc/zookeeper/secrets
      - ./zookeeper/tmp/data:/var/lib/zookeeper/data
      - ./zookeeper/tmp/log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:6.2.1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/tmp/secrets:/etc/kafka/secrets
      - ./kafka/tmp/data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.1
    restart: always
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
    ports:
      - "8085:8085"
    volumes:
      - ./schema-registry/tmp/secrets:/etc/schema-registry/secrets

  prometheus:
    image: prom/prometheus:v2.30.0
    restart: always
    volumes:
      - ./prometheus/tmp:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:8.1.5
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
